#!/usr/bin/env node

global.Promise = require('bluebird');
var co = require('co');
var lib = require('../');
var cheerio = require('cheerio');
var path = require('path');
var fs = require('fs');
var argv = require('minimist')(process.argv.slice(2), {
  alias: {
    h: 'help',
    c: 'concurrency'
  },
  default: {
    concurrency: 10
  }
});

if (argv._.length === 0 || argv.help) {
  console.log(
    `
  网易云音乐 歌单 下载器

  使用:
    yun [选项] <歌单地址>

  示例:
    # 20首同时下载
    yun -c 20 http://music.163.com/#/playlist?id=12583200

  选项:
    -h,--help           查看帮助
    -c,--concurrency    设置同时下载数量`

  );
  process.exit(1);
}

// url
var url = argv._[0];

// concurrency
var concurrency = argv.concurrency;

co(function * () {
  url = lib.normalizeUrl(url);
  var html = yield lib.getHtml(url);
  var $ = cheerio.load(html);

  var name = lib.getPlaylistName($);
  var songs = yield lib.getSongs($);

  // directory
  var dir = path.resolve(name);
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir);
  }

  var start = Date.now();
  console.log('正在下载,请稍候...');

  yield Promise.map(songs, function(song) {
    var ext = path.extname(song.url);
    var filename = path.join(dir, `${song.singer} - ${song.title}.${ ext }`);
    return lib.download(song.url, filename)
      .then(function() {
        console.log(
          `√ ${ song.index }/${ songs.length } 下载完成 ${ song.singer } - ${ song.title }`);
      })
      .catch(function(e) {
        console.log(
          `× ${ song.index }/${ songs.length } 下载失败 ${ song.singer } - ${ song.title }`);
        console.error(e.stack || e);
      });
  }, {
    concurrency: concurrency
  });

  console.log('下载完成,耗时%s秒', (Date.now() - start) / 1000);
});