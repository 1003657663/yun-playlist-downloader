#!/usr/bin/env node

'use strict';

global.Promise = require('bluebird');
var co = require('co');
var lib = require('../lib');
var cheerio = require('cheerio');
var path = require('path');
var fs = require('fs');
var argv = require('minimist')(process.argv.slice(2), {
  alias: {
    h: 'help',
    c: 'concurrency'
  },
  default: {
    concurrency: 10
  }
});

if (argv._.length === 0 || argv.help) {
  console.log(
    `
  网易云音乐 歌单/专辑 下载器

  使用:
    yun [选项] <地址>

  示例:
    # 20首同时下载
    yun -c 20 http://music.163.com/#/playlist?id=12583200

  选项:
    -h,--help           查看此帮助信息
    -c,--concurrency    设置同时下载数量, 默认10`

  );
  process.exit(1);
}

// url
var url = argv._[0];

// concurrency
var concurrency = argv.concurrency;

co(function * () {
  url = lib.normalizeUrl(url);
  var html = yield lib.getHtml(url);
  var $ = cheerio.load(html, {
    decodeEntities: false
  });

  var type = lib.getType(url); // album or playlist
  var name = lib.getTitle($, type);
  var songs = yield lib.getSongs($, type);

  // return;

  // directory
  var dir = path.resolve(name);
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir);
  }

  var start = Date.now();
  console.log(`正在下载『${ name }』,请稍候...`);

  /**
   * song = {
   *   filename,url,index
   * }
   */
  yield Promise.map(songs, function(song) {
    var ext = path.extname(song.url);
    var filename = path.join(dir, `${ song.filename }${ ext }`);
    return lib.downloadSong(song.url,filename,song,songs.length);
  }, {
    concurrency: concurrency
  });

  console.log('下载完成,耗时%s秒', (Date.now() - start) / 1000);
});